/*
   Copyright 2015-2020, Marty Lamb

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

*/

package com.martiansoftware.blobstore;

import java.io.IOException;
import java.io.InputStream;

/**
 * A reference to a blob of data stored in a BlobStore.
 * 
 * @author <a href="http://martylamb.com">Marty Lamb</a>
 */
public interface Blob {
    /**
     * Returns this Blob's unique ID, generated by the BlobStore.
     * @return this Blob's unique ID, generated by the BlobStore.
     */
    public String id();
    
    /**
     * Returns this Blob's size, in bytes
     * @return this Blob's size, in bytes
     */
    public long size();
    
    /**
     * Provides an InputStream from which the Blob's data can be read
     * @return an InputStream from which the Blob's data can be read
     * @throws IOException if an error occurs while accessing the backing store
     */
    public InputStream getInputStream() throws IOException;
    
    /**
     * Returns a String representation of this Blob.  It is not possible to
     * provide a default implementation of toString in an interface, so 
     * implementations of Blob can provide their own implementation that simply
     * calls this method in order to provide a uniformly-formatted description.
     * @return a String representation of this Blob.
     */
    default public String description() {
        return String.format("Blob id=%s size=%d", id(), size());
    }
    
 }
